{"ast":null,"code":"import * as types from \"./actionsTypes\";\nimport { getCart, addItem, deleteItem, updateCartApi } from \"../../api/cartApi\";\nexport function loadCartSuccess(cart) {\n  return {\n    type: types.LOAD_CART_SUCCESS,\n    cart\n  };\n}\nexport function addItemToCartSuccess(item) {\n  return {\n    type: types.ADD_ITEM_TO_CART,\n    item\n  };\n}\nexport function deleteItemFromCartSuccess(item) {\n  return {\n    type: types.DELETE_ITEM_FROM_CART,\n    item\n  };\n}\nexport function updateCartSuccess(updatedCart) {\n  return {\n    type: types.UPDATE_CART_SUCCESS,\n    updatedCart\n  };\n}\nexport function addItemToCart(item) {\n  return function (dispatch) {\n    return addItem(item).then(addedItem => dispatch(addItemToCartSuccess(addedItem))).catch(error => console.error(error));\n  };\n}\nexport function loadCart() {\n  return function (dispatch) {\n    return getCart().then(cart => {\n      dispatch(loadCartSuccess(cart));\n    }).catch(error => console.error(error));\n  };\n}\nexport function deleteItemFromCart(item) {\n  return dispatch => {\n    dispatch(deleteItemFromCartSuccess(item));\n    return deleteItem(item);\n  };\n}\nexport function updateCart(cart) {\n  return function (dispatch) {\n    return updateCartApi(cart).then(updatedCart => dispatch(updateCartSuccess(updatedCart))).catch(error => console.error(error));\n  };\n}","map":{"version":3,"sources":["C:/Users/User/Documents/Ismagilov Roman/shit/New folder/second_draft/src/redux/actions/cartActions.js"],"names":["types","getCart","addItem","deleteItem","updateCartApi","loadCartSuccess","cart","type","LOAD_CART_SUCCESS","addItemToCartSuccess","item","ADD_ITEM_TO_CART","deleteItemFromCartSuccess","DELETE_ITEM_FROM_CART","updateCartSuccess","updatedCart","UPDATE_CART_SUCCESS","addItemToCart","dispatch","then","addedItem","catch","error","console","loadCart","deleteItemFromCart","updateCart"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,gBAAvB;AACA,SAASC,OAAT,EAAkBC,OAAlB,EAA2BC,UAA3B,EAAuCC,aAAvC,QAA4D,mBAA5D;AAEA,OAAO,SAASC,eAAT,CAAyBC,IAAzB,EAA+B;AACpC,SAAO;AAAEC,IAAAA,IAAI,EAAEP,KAAK,CAACQ,iBAAd;AAAiCF,IAAAA;AAAjC,GAAP;AACD;AAED,OAAO,SAASG,oBAAT,CAA8BC,IAA9B,EAAoC;AACzC,SAAO;AAAEH,IAAAA,IAAI,EAAEP,KAAK,CAACW,gBAAd;AAAgCD,IAAAA;AAAhC,GAAP;AACD;AAED,OAAO,SAASE,yBAAT,CAAmCF,IAAnC,EAAyC;AAC9C,SAAO;AAAEH,IAAAA,IAAI,EAAEP,KAAK,CAACa,qBAAd;AAAqCH,IAAAA;AAArC,GAAP;AACD;AAED,OAAO,SAASI,iBAAT,CAA2BC,WAA3B,EAAwC;AAC7C,SAAO;AAAER,IAAAA,IAAI,EAAEP,KAAK,CAACgB,mBAAd;AAAmCD,IAAAA;AAAnC,GAAP;AACD;AAED,OAAO,SAASE,aAAT,CAAuBP,IAAvB,EAA6B;AAClC,SAAO,UAAUQ,QAAV,EAAoB;AACzB,WAAOhB,OAAO,CAACQ,IAAD,CAAP,CACJS,IADI,CACEC,SAAD,IAAeF,QAAQ,CAACT,oBAAoB,CAACW,SAAD,CAArB,CADxB,EAEJC,KAFI,CAEGC,KAAD,IAAWC,OAAO,CAACD,KAAR,CAAcA,KAAd,CAFb,CAAP;AAGD,GAJD;AAKD;AAED,OAAO,SAASE,QAAT,GAAoB;AACzB,SAAO,UAAUN,QAAV,EAAoB;AACzB,WAAOjB,OAAO,GACXkB,IADI,CACEb,IAAD,IAAU;AACdY,MAAAA,QAAQ,CAACb,eAAe,CAACC,IAAD,CAAhB,CAAR;AACD,KAHI,EAIJe,KAJI,CAIGC,KAAD,IAAWC,OAAO,CAACD,KAAR,CAAcA,KAAd,CAJb,CAAP;AAKD,GAND;AAOD;AAED,OAAO,SAASG,kBAAT,CAA4Bf,IAA5B,EAAkC;AACvC,SAAQQ,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAACN,yBAAyB,CAACF,IAAD,CAA1B,CAAR;AACA,WAAOP,UAAU,CAACO,IAAD,CAAjB;AACD,GAHD;AAID;AAED,OAAO,SAASgB,UAAT,CAAoBpB,IAApB,EAA0B;AAC/B,SAAO,UAAUY,QAAV,EAAoB;AACzB,WAAOd,aAAa,CAACE,IAAD,CAAb,CACJa,IADI,CACEJ,WAAD,IAAiBG,QAAQ,CAACJ,iBAAiB,CAACC,WAAD,CAAlB,CAD1B,EAEJM,KAFI,CAEGC,KAAD,IAAWC,OAAO,CAACD,KAAR,CAAcA,KAAd,CAFb,CAAP;AAGD,GAJD;AAKD","sourcesContent":["import * as types from \"./actionsTypes\";\nimport { getCart, addItem, deleteItem, updateCartApi } from \"../../api/cartApi\";\n\nexport function loadCartSuccess(cart) {\n  return { type: types.LOAD_CART_SUCCESS, cart };\n}\n\nexport function addItemToCartSuccess(item) {\n  return { type: types.ADD_ITEM_TO_CART, item };\n}\n\nexport function deleteItemFromCartSuccess(item) {\n  return { type: types.DELETE_ITEM_FROM_CART, item };\n}\n\nexport function updateCartSuccess(updatedCart) {\n  return { type: types.UPDATE_CART_SUCCESS, updatedCart };\n}\n\nexport function addItemToCart(item) {\n  return function (dispatch) {\n    return addItem(item)\n      .then((addedItem) => dispatch(addItemToCartSuccess(addedItem)))\n      .catch((error) => console.error(error));\n  };\n}\n\nexport function loadCart() {\n  return function (dispatch) {\n    return getCart()\n      .then((cart) => {\n        dispatch(loadCartSuccess(cart));\n      })\n      .catch((error) => console.error(error));\n  };\n}\n\nexport function deleteItemFromCart(item) {\n  return (dispatch) => {\n    dispatch(deleteItemFromCartSuccess(item));\n    return deleteItem(item);\n  };\n}\n\nexport function updateCart(cart) {\n  return function (dispatch) {\n    return updateCartApi(cart)\n      .then((updatedCart) => dispatch(updateCartSuccess(updatedCart)))\n      .catch((error) => console.error(error));\n  };\n}\n"]},"metadata":{},"sourceType":"module"}