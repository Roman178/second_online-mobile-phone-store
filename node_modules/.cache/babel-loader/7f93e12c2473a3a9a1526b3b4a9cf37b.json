{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\Ismagilov Roman\\\\shit\\\\New folder\\\\second_draft\\\\src\\\\components\\\\cart\\\\CartPage.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { loadCart, deleteItemFromCart } from \"../../redux/actions/cartActions\";\nimport CardForCart from \"./CardForCart\";\n\nclass CartPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChangeQuantity = (item, changedValue) => {\n      if (isNaN(changedValue)) {\n        // console.log({ ...item, quantity: 1 });\n        const updatedCart = this.state.cart.map(i => {\n          if (i.id === item.id) {\n            return { ...item,\n              quantity: 1,\n              cost: parseInt(item.price) * 1\n            };\n          }\n\n          return i;\n        });\n        this.setState({\n          cart: updatedCart\n        });\n      } else {\n        // console.log({ ...item, quantity: changedValue });\n        const updatedCart = this.state.cart.map(i => {\n          if (i.id === item.id) {\n            return { ...item,\n              quantity: changedValue,\n              cost: parseInt(item.price) * changedValue\n            };\n          }\n\n          return i;\n        });\n        this.setState({\n          cart: updatedCart\n        });\n      }\n    };\n\n    this.state = {\n      cart: [],\n      totalCost: 0\n    }; // this.handleDeleteFromCart = this.handleDeleteFromCart.bind(this);\n  }\n\n  componentDidMount() {\n    // await this.props.loadCart().catch((error) => console.error(error));\n    this.setState({\n      cart: this.props.cart\n    });\n  }\n\n  componentWillUnmount() {}\n\n  handleDeleteItem(item) {\n    this.setState({\n      cart: this.state.cart.filter(i => i.id !== item.id)\n    });\n    this.props.deleteItemFromCart(item);\n  }\n\n  render() {\n    console.log(this.props.cart);\n    console.log(this.state.cart); // const listOfCarts = this.state.cart.map((item) => (\n    //   <CardForCart\n    //     key={item.id}\n    //     id={item.id}\n    //     path={item.path}\n    //     title={item.title}\n    //     cost={item.cost}\n    //     onDeleteItem={() => this.handleDeleteItem(item)}\n    //     onChangeQuantity={(count) => this.handleChangeQuantity(item, count)}\n    //     quantity={item.quantity}\n    //   />\n    // ));\n    // const totalCost = listOfCarts.reduce(\n    //   (sum, current) => sum + parseInt(current.props.cost),\n    //   0\n    // );\n\n    const totalCost = this.state.cart.reduce((sum, current) => sum + parseInt(current.cost), 0);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }\n    }, \"Cart Page\"), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        margin: \"2% 15% 2% 15%\",\n        display: \"flex\",\n        flexDirection: \"column\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }\n    }, this.state.cart.map(item => /*#__PURE__*/React.createElement(CardForCart, {\n      key: item.id,\n      id: item.id,\n      path: item.path,\n      title: item.title,\n      cost: item.cost,\n      onDeleteItem: () => this.handleDeleteItem(item),\n      onChangeQuantity: count => this.handleChangeQuantity(item, count),\n      quantity: item.quantity,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"h2\", {\n      style: {\n        alignSelf: \"flex-end\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }\n    }, \"Total: $\", totalCost)));\n  }\n\n}\n\nfunction mapStateToProps(state, ownProps) {\n  return {\n    cart: state.cart\n  };\n}\n\nconst mapDispatchToProps = {\n  loadCart,\n  deleteItemFromCart\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(CartPage);","map":{"version":3,"sources":["C:/Users/User/Documents/Ismagilov Roman/shit/New folder/second_draft/src/components/cart/CartPage.js"],"names":["React","connect","loadCart","deleteItemFromCart","CardForCart","CartPage","Component","constructor","props","handleChangeQuantity","item","changedValue","isNaN","updatedCart","state","cart","map","i","id","quantity","cost","parseInt","price","setState","totalCost","componentDidMount","componentWillUnmount","handleDeleteItem","filter","render","console","log","reduce","sum","current","margin","display","flexDirection","path","title","count","alignSelf","mapStateToProps","ownProps","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { loadCart, deleteItemFromCart } from \"../../redux/actions/cartActions\";\nimport CardForCart from \"./CardForCart\";\n\nclass CartPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { cart: [], totalCost: 0 };\n\n    // this.handleDeleteFromCart = this.handleDeleteFromCart.bind(this);\n  }\n\n  componentDidMount() {\n    // await this.props.loadCart().catch((error) => console.error(error));\n    this.setState({ cart: this.props.cart });\n  }\n\n  componentWillUnmount() {}\n\n  handleChangeQuantity = (item, changedValue) => {\n    if (isNaN(changedValue)) {\n      // console.log({ ...item, quantity: 1 });\n      const updatedCart = this.state.cart.map((i) => {\n        if (i.id === item.id) {\n          return { ...item, quantity: 1, cost: parseInt(item.price) * 1 };\n        }\n        return i;\n      });\n      this.setState({ cart: updatedCart });\n    } else {\n      // console.log({ ...item, quantity: changedValue });\n      const updatedCart = this.state.cart.map((i) => {\n        if (i.id === item.id) {\n          return {\n            ...item,\n            quantity: changedValue,\n            cost: parseInt(item.price) * changedValue,\n          };\n        }\n        return i;\n      });\n      this.setState({ cart: updatedCart });\n    }\n  };\n\n  handleDeleteItem(item) {\n    this.setState({ cart: this.state.cart.filter((i) => i.id !== item.id) });\n    this.props.deleteItemFromCart(item);\n  }\n\n  render() {\n    console.log(this.props.cart);\n    console.log(this.state.cart);\n\n    // const listOfCarts = this.state.cart.map((item) => (\n    //   <CardForCart\n    //     key={item.id}\n    //     id={item.id}\n    //     path={item.path}\n    //     title={item.title}\n    //     cost={item.cost}\n    //     onDeleteItem={() => this.handleDeleteItem(item)}\n    //     onChangeQuantity={(count) => this.handleChangeQuantity(item, count)}\n    //     quantity={item.quantity}\n    //   />\n    // ));\n\n    // const totalCost = listOfCarts.reduce(\n    //   (sum, current) => sum + parseInt(current.props.cost),\n    //   0\n    // );\n\n    const totalCost = this.state.cart.reduce(\n      (sum, current) => sum + parseInt(current.cost),\n      0\n    );\n\n    return (\n      <div>\n        <h1>Cart Page</h1>\n        <div\n          style={{\n            margin: \"2% 15% 2% 15%\",\n            display: \"flex\",\n            flexDirection: \"column\",\n          }}\n        >\n          {this.state.cart.map((item) => (\n            <CardForCart\n              key={item.id}\n              id={item.id}\n              path={item.path}\n              title={item.title}\n              cost={item.cost}\n              onDeleteItem={() => this.handleDeleteItem(item)}\n              onChangeQuantity={(count) =>\n                this.handleChangeQuantity(item, count)\n              }\n              quantity={item.quantity}\n            />\n          ))}\n          <h2 style={{ alignSelf: \"flex-end\" }}>Total: ${totalCost}</h2>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state, ownProps) {\n  return {\n    cart: state.cart,\n  };\n}\n\nconst mapDispatchToProps = {\n  loadCart,\n  deleteItemFromCart,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CartPage);\n"]},"metadata":{},"sourceType":"module"}