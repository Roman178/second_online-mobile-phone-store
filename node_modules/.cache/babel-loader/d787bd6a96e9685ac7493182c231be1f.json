{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\Ismagilov Roman\\\\shit\\\\New folder\\\\second_draft\\\\src\\\\components\\\\cart\\\\CheckoutPage.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { useState } from \"react\";\nimport { Form, Input, InputNumber, Button, Select, Modal } from \"antd\";\nimport { statesOfAmerica } from \"../../USAstates\";\nconst validateMessages = {\n  required: \"${label} is required!\"\n};\n\nconst CheckoutPage = props => {\n  const [americanState, setAmericanState] = useState(\"\");\n  const [visible, setVisible] = useState(false);\n\n  function onFinish(values) {\n    console.log(\"Received values of form: \", values);\n  }\n\n  function success() {\n    Modal.success({\n      content: \"some messages...some messages...\"\n    });\n  }\n\n  const subtotal = props.cart.reduce((sum, current) => sum + parseInt(current.cost), 0);\n  const stateTax = (subtotal * (0.01 * americanState.length)).toFixed(2);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, subtotal === 0 ? /*#__PURE__*/React.createElement(\"h5\", {\n    style: {\n      backgroundColor: \"white\",\n      height: \"100px\",\n      paddingTop: \"1%\",\n      marginRight: \"70%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, \"Your cart is currently empty.\") : /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"space-around\",\n      margin: \"2% 13% 0 13%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    style: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      width: \"60%\",\n      backgroundColor: \"white\",\n      padding: \"1.5%\"\n    },\n    name: \"order-form\",\n    onFinish: onFinish,\n    validateMessages: validateMessages,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    name: [\"first name\"],\n    label: \"First name\",\n    rules: [{\n      required: true\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    name: [\"second name\"],\n    label: \"Second name\",\n    rules: [{\n      required: true\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    name: [\"company name\"],\n    label: \"Company name (optional)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    name: [\"country\"],\n    label: \"Country\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      margin: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 15\n    }\n  }, \"USA\")), /*#__PURE__*/React.createElement(Form.Item, {\n    name: [\"state of country\"],\n    label: \"State\",\n    rules: [{\n      required: true\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    placeholder: \"Select state\",\n    onChange: value => setAmericanState(value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 15\n    }\n  }, statesOfAmerica.map(state => /*#__PURE__*/React.createElement(Select.Option, {\n    value: state,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 19\n    }\n  }, state)))), /*#__PURE__*/React.createElement(Form.Item, {\n    name: [\"street\"],\n    label: \"Street address\",\n    rules: [{\n      required: true,\n      message: \"Address is required\"\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    style: {\n      width: \"50%\"\n    },\n    placeholder: \"House number and street name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    name: [\"city\"],\n    label: \"Town/City\",\n    rules: [{\n      required: true,\n      message: \"Address is required\"\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    style: {\n      width: \"50%\"\n    },\n    placeholder: \"Town/City name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    name: [\"postal code\"],\n    label: \"Postal code\",\n    rules: [{\n      required: true,\n      message: \"Postal code is required\"\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    style: {\n      width: \"50%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"phone\",\n    label: \"Phone Number\",\n    rules: [{\n      required: true,\n      message: \"Please input your phone number!\"\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    addonBefore: \"+1\",\n    style: {\n      width: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"email\",\n    label: \"E-mail\",\n    rules: [{\n      type: \"email\",\n      message: \"The input is not valid E-mail!\"\n    }, {\n      required: true,\n      message: \"Please input your E-mail!\"\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    onClick: success,\n    size: \"large\",\n    type: \"primary\",\n    style: {\n      marginTop: \"20px\",\n      width: \"100px\"\n    },\n    htmlType: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }\n  }, \"Submit\")), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: \"40%\",\n      marginLeft: \"30px\",\n      backgroundColor: \"white\",\n      padding: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 13\n    }\n  }, \"Your order\"), /*#__PURE__*/React.createElement(\"table\", {\n    width: \"100%\",\n    rules: \"rows\",\n    style: {\n      width: \"100%\",\n      height: \"330px\",\n      borderBottom: \"1px solid\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 19\n    }\n  }, \"Product\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 19\n    }\n  }, \"Subtotal\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    style: {\n      fontSize: \"1.2em\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 15\n    }\n  }, props.cart.map(item => /*#__PURE__*/React.createElement(\"tr\", {\n    key: item.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 21\n    }\n  }, item.title, \" x \", item.quantity), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 21\n    }\n  }, \"$\", item.cost)))), /*#__PURE__*/React.createElement(\"tfoot\", {\n    style: {\n      fontSize: \"1.3em\",\n      fontWeight: \"bold\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 19\n    }\n  }, \"Subtotal\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 21\n    }\n  }, \"$\", subtotal))), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 19\n    }\n  }, americanState, \" State Tax \", americanState.length, \"%\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 21\n    }\n  }, \"$\", parseFloat(stateTax).toFixed(2)))), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 19\n    }\n  }, \"Shipping\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 21\n    }\n  }, \"DHL or Fedex (+ $17)\"))), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 19\n    }\n  }, \"Total\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 21\n    }\n  }, \"$\", (subtotal + parseFloat(stateTax) + 17).toFixed(2)))))))));\n};\n\nfunction mapStateToProps(state, ownProps) {\n  return {\n    cart: state.cart\n  };\n}\n\nexport default connect(mapStateToProps)(CheckoutPage);","map":{"version":3,"sources":["C:/Users/User/Documents/Ismagilov Roman/shit/New folder/second_draft/src/components/cart/CheckoutPage.js"],"names":["React","connect","useState","Form","Input","InputNumber","Button","Select","Modal","statesOfAmerica","validateMessages","required","CheckoutPage","props","americanState","setAmericanState","visible","setVisible","onFinish","values","console","log","success","content","subtotal","cart","reduce","sum","current","parseInt","cost","stateTax","length","toFixed","backgroundColor","height","paddingTop","marginRight","display","justifyContent","margin","flexDirection","width","padding","value","map","state","message","type","marginTop","marginLeft","borderBottom","fontSize","item","id","title","quantity","fontWeight","parseFloat","mapStateToProps","ownProps"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { useState } from \"react\";\r\nimport { Form, Input, InputNumber, Button, Select, Modal } from \"antd\";\r\nimport { statesOfAmerica } from \"../../USAstates\";\r\n\r\nconst validateMessages = {\r\n  required: \"${label} is required!\",\r\n};\r\n\r\nconst CheckoutPage = (props) => {\r\n  const [americanState, setAmericanState] = useState(\"\");\r\n  const [visible, setVisible] = useState(false);\r\n\r\n  function onFinish(values) {\r\n    console.log(\"Received values of form: \", values);\r\n  }\r\n\r\n  function success() {\r\n    Modal.success({\r\n      content: \"some messages...some messages...\",\r\n    });\r\n  }\r\n\r\n  const subtotal = props.cart.reduce(\r\n    (sum, current) => sum + parseInt(current.cost),\r\n    0\r\n  );\r\n  const stateTax = (subtotal * (0.01 * americanState.length)).toFixed(2);\r\n\r\n  return (\r\n    <>\r\n      {subtotal === 0 ? (\r\n        <h5\r\n          style={{\r\n            backgroundColor: \"white\",\r\n            height: \"100px\",\r\n            paddingTop: \"1%\",\r\n            marginRight: \"70%\",\r\n          }}\r\n        >\r\n          Your cart is currently empty.\r\n        </h5>\r\n      ) : (\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"space-around\",\r\n            margin: \"2% 13% 0 13%\",\r\n          }}\r\n        >\r\n          <Form\r\n            style={{\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              width: \"60%\",\r\n              backgroundColor: \"white\",\r\n              padding: \"1.5%\",\r\n            }}\r\n            name=\"order-form\"\r\n            onFinish={onFinish}\r\n            validateMessages={validateMessages}\r\n          >\r\n            <Form.Item\r\n              name={[\"first name\"]}\r\n              label=\"First name\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                },\r\n              ]}\r\n            >\r\n              <Input />\r\n            </Form.Item>\r\n            <Form.Item\r\n              name={[\"second name\"]}\r\n              label=\"Second name\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                },\r\n              ]}\r\n            >\r\n              <Input />\r\n            </Form.Item>\r\n            <Form.Item name={[\"company name\"]} label=\"Company name (optional)\">\r\n              <Input />\r\n            </Form.Item>\r\n            <Form.Item name={[\"country\"]} label=\"Country\">\r\n              <p style={{ margin: 0 }}>USA</p>\r\n            </Form.Item>\r\n            <Form.Item\r\n              name={[\"state of country\"]}\r\n              label=\"State\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                },\r\n              ]}\r\n            >\r\n              <Select\r\n                placeholder=\"Select state\"\r\n                onChange={(value) => setAmericanState(value)}\r\n              >\r\n                {statesOfAmerica.map((state) => (\r\n                  <Select.Option value={state}>{state}</Select.Option>\r\n                ))}\r\n              </Select>\r\n            </Form.Item>\r\n            <Form.Item\r\n              name={[\"street\"]}\r\n              label=\"Street address\"\r\n              rules={[{ required: true, message: \"Address is required\" }]}\r\n            >\r\n              <Input\r\n                style={{ width: \"50%\" }}\r\n                placeholder=\"House number and street name\"\r\n              />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              name={[\"city\"]}\r\n              label=\"Town/City\"\r\n              rules={[{ required: true, message: \"Address is required\" }]}\r\n            >\r\n              <Input style={{ width: \"50%\" }} placeholder=\"Town/City name\" />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              name={[\"postal code\"]}\r\n              label=\"Postal code\"\r\n              rules={[{ required: true, message: \"Postal code is required\" }]}\r\n            >\r\n              <Input style={{ width: \"50%\" }} />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              name=\"phone\"\r\n              label=\"Phone Number\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"Please input your phone number!\",\r\n                },\r\n              ]}\r\n            >\r\n              <Input\r\n                addonBefore=\"+1\"\r\n                style={{\r\n                  width: \"100%\",\r\n                }}\r\n              />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              name=\"email\"\r\n              label=\"E-mail\"\r\n              rules={[\r\n                {\r\n                  type: \"email\",\r\n                  message: \"The input is not valid E-mail!\",\r\n                },\r\n                {\r\n                  required: true,\r\n                  message: \"Please input your E-mail!\",\r\n                },\r\n              ]}\r\n            >\r\n              <Input />\r\n            </Form.Item>\r\n            <Button\r\n              onClick={success}\r\n              size=\"large\"\r\n              type=\"primary\"\r\n              style={{ marginTop: \"20px\", width: \"100px\" }}\r\n              htmlType=\"submit\"\r\n            >\r\n              Submit\r\n            </Button>\r\n          </Form>\r\n\r\n          <div\r\n            style={{\r\n              width: \"40%\",\r\n              marginLeft: \"30px\",\r\n              backgroundColor: \"white\",\r\n              padding: \"10px\",\r\n            }}\r\n          >\r\n            <h4>Your order</h4>\r\n            <table\r\n              width=\"100%\"\r\n              rules=\"rows\"\r\n              style={{\r\n                width: \"100%\",\r\n                height: \"330px\",\r\n                borderBottom: \"1px solid\",\r\n              }}\r\n            >\r\n              <thead>\r\n                <tr>\r\n                  <th>Product</th>\r\n                  <th>Subtotal</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody style={{ fontSize: \"1.2em\" }}>\r\n                {props.cart.map((item) => (\r\n                  <tr key={item.id}>\r\n                    <td>\r\n                      {item.title} x {item.quantity}\r\n                    </td>\r\n                    <td>${item.cost}</td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n              <tfoot style={{ fontSize: \"1.3em\", fontWeight: \"bold\" }}>\r\n                <tr>\r\n                  <th>Subtotal</th>\r\n                  <td>\r\n                    <span>${subtotal}</span>\r\n                  </td>\r\n                </tr>\r\n\r\n                <tr>\r\n                  <th>\r\n                    {americanState} State Tax {americanState.length}%\r\n                  </th>\r\n                  <td>\r\n                    <span>${parseFloat(stateTax).toFixed(2)}</span>\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <th>Shipping</th>\r\n                  <td>\r\n                    <span>DHL or Fedex (+ $17)</span>\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <th>Total</th>\r\n                  <td>\r\n                    <span>\r\n                      ${(subtotal + parseFloat(stateTax) + 17).toFixed(2)}\r\n                    </span>\r\n                  </td>\r\n                </tr>\r\n              </tfoot>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state, ownProps) {\r\n  return {\r\n    cart: state.cart,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(CheckoutPage);\r\n"]},"metadata":{},"sourceType":"module"}