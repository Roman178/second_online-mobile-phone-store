{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\Ismagilov Roman\\\\shit\\\\New folder\\\\second_draft\\\\src\\\\components\\\\cart\\\\CartPage.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { loadCart, deleteItemFromCart } from \"../../redux/actions/cartActions\";\nimport CardForCart from \"./CardForCart\";\n\nclass CartPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChangeQuantity = (item, changedValue) => {\n      if (isNaN(changedValue)) {\n        // console.log({ ...item, quantity: 1 });\n        const updatedCart = this.state.cart.map(i => {\n          if (i.id === item.id) {\n            return { ...item,\n              quantity: 1,\n              cost: parseInt(item.price) * 1\n            };\n          }\n\n          return i;\n        });\n        this.setState({\n          cart: updatedCart\n        });\n      } else {\n        // console.log({ ...item, quantity: changedValue });\n        const updatedCart = this.state.cart.map(i => {\n          if (i.id === item.id) {\n            return { ...item,\n              quantity: changedValue,\n              cost: parseInt(item.price) * changedValue\n            };\n          }\n\n          return i;\n        });\n        this.setState({\n          cart: updatedCart\n        });\n      }\n    };\n\n    this.state = {\n      cart: []\n    }; // this.handleDeleteFromCart = this.handleDeleteFromCart.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.props.loadCart().catch(error => console.error(error));\n    this.setState({\n      cart: this.props.cart\n    });\n  }\n\n  handleDeleteItem(item) {\n    this.setState({\n      cart: this.state.cart.filter(i => i.id !== item.id)\n    });\n    this.props.deleteItemFromCart(item);\n  }\n\n  render() {\n    console.log(this.state.cart);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    }, \"Cart Page\"), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        margin: \"2% 15% 2% 15%\",\n        display: \"flex\",\n        flexDirection: \"column\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }\n    }, this.state.cart.map(item => /*#__PURE__*/React.createElement(CardForCart, {\n      key: item.id,\n      id: item.id,\n      path: item.path,\n      title: item.title,\n      cost: \"$\" + item.cost,\n      onDeleteItem: () => this.handleDeleteItem(item),\n      onChangeQuantity: count => this.handleChangeQuantity(item, count),\n      quantity: item.quantity,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"h2\", {\n      style: {\n        alignSelf: \"flex-end\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }\n    }, \"Total: 1237$\")));\n  }\n\n}\n\nfunction mapStateToProps(state, ownProps) {\n  return {\n    cart: state.cart\n  };\n}\n\nconst mapDispatchToProps = {\n  loadCart,\n  deleteItemFromCart\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(CartPage);","map":{"version":3,"sources":["C:/Users/User/Documents/Ismagilov Roman/shit/New folder/second_draft/src/components/cart/CartPage.js"],"names":["React","connect","loadCart","deleteItemFromCart","CardForCart","CartPage","Component","constructor","props","handleChangeQuantity","item","changedValue","isNaN","updatedCart","state","cart","map","i","id","quantity","cost","parseInt","price","setState","componentDidMount","catch","error","console","handleDeleteItem","filter","render","log","margin","display","flexDirection","path","title","count","alignSelf","mapStateToProps","ownProps","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { loadCart, deleteItemFromCart } from \"../../redux/actions/cartActions\";\nimport CardForCart from \"./CardForCart\";\n\nclass CartPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { cart: [] };\n\n    // this.handleDeleteFromCart = this.handleDeleteFromCart.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.props.loadCart().catch((error) => console.error(error));\n    this.setState({ cart: this.props.cart });\n  }\n\n  handleChangeQuantity = (item, changedValue) => {\n    if (isNaN(changedValue)) {\n      // console.log({ ...item, quantity: 1 });\n      const updatedCart = this.state.cart.map((i) => {\n        if (i.id === item.id) {\n          return { ...item, quantity: 1, cost: parseInt(item.price) * 1 };\n        }\n        return i;\n      });\n      this.setState({ cart: updatedCart });\n    } else {\n      // console.log({ ...item, quantity: changedValue });\n      const updatedCart = this.state.cart.map((i) => {\n        if (i.id === item.id) {\n          return {\n            ...item,\n            quantity: changedValue,\n            cost: parseInt(item.price) * changedValue,\n          };\n        }\n        return i;\n      });\n      this.setState({ cart: updatedCart });\n    }\n  };\n\n  handleDeleteItem(item) {\n    this.setState({ cart: this.state.cart.filter((i) => i.id !== item.id) });\n    this.props.deleteItemFromCart(item);\n  }\n\n  render() {\n    console.log(this.state.cart);\n    return (\n      <div>\n        <h1>Cart Page</h1>\n        <div\n          style={{\n            margin: \"2% 15% 2% 15%\",\n            display: \"flex\",\n            flexDirection: \"column\",\n          }}\n        >\n          {this.state.cart.map((item) => (\n            <CardForCart\n              key={item.id}\n              id={item.id}\n              path={item.path}\n              title={item.title}\n              cost={\"$\" + item.cost}\n              onDeleteItem={() => this.handleDeleteItem(item)}\n              onChangeQuantity={(count) =>\n                this.handleChangeQuantity(item, count)\n              }\n              quantity={item.quantity}\n            />\n          ))}\n          <h2 style={{ alignSelf: \"flex-end\" }}>Total: 1237$</h2>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state, ownProps) {\n  return {\n    cart: state.cart,\n  };\n}\n\nconst mapDispatchToProps = {\n  loadCart,\n  deleteItemFromCart,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CartPage);\n"]},"metadata":{},"sourceType":"module"}